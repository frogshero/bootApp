TAMS(top at mark start)

The Initial Mark Phase: ygc中执行。STW。
The Root Region Scanning Phase: ygc后执行。并行运行。Eden区现在是空的/新分配对象，Survivor区有存活对象，扫描这些存活对象，
                                查找其引用Old区的指针。把这些Old区的Card作为并发标记阶段的Root的一部分。
Concurrent marking phase：在标记阶段，会使用到一个marking stack的东西。G1不断从marking stack中取出引用，递归扫描整个堆里的对象图，
                          并且在bitmap上进行标记。这个递归过程采用的是深度遍历，会不断把对象的域入栈。

YGC时，GC root主要是两类：栈空间和老年代分区到新生代分区的引用关系。
Mixed GC时，由于仅回收部分老年代分区，老年代分区之间的引用关系也将被使用。
因此，我们仅需要记录两种引用关系：老年代分区引用新生代分区，老年代分区之间的引用。
以部分老年代Region为root，通过RSet找到活对象并标记

RSet
由于PointIn模式的缺点，一个对象可能被引用的次数不固定，为了节约空间，G1采用了三级数据结构来存储：
稀疏表：通过哈希表来存储，key是region index，value是card数组
    region1: card1 card2 card5
    region2: card3, card5
细粒度PerRegionTable：当稀疏表指定region的card数量超过阈值时，则在细粒度PRT中创建一个对应的PerRegionTable对象，其包含一个C heap位图，每一位对应一个card
    region1: 011001
    region2: 000101
粗粒度位图：当细粒度PRT size超过阈值时，则退化为分区位图，每一位表示对应分区有引用到当前分区
    region1: 1
    region2: 0

https://www.infoq.com/articles/G1-One-Garbage-Collector-To-Rule-Them-All/
https://www.infoq.com/articles/tuning-tips-G1-GC/
https://www.jianshu.com/p/aef0f4765098